// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  phone         String?
  country       String?
  password      String
  emailVerified Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
}

model Booking {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Package Details
  packageName     String
  packageId       String?

  // Travel Details
  travelDate      DateTime
  duration        String
  hotelCategory   String   // threestar, fourstar, fivestar

  // Traveler Information
  adults          Int      @default(2)
  children3to5    Int      @default(0)
  children6to10   Int      @default(0)

  // Pricing
  totalPrice      Float
  currency        String   @default("EUR")

  // Booking Status
  status          BookingStatus @default(PENDING)
  paymentStatus   PaymentStatus @default(PENDING)

  // Additional Information
  specialRequests String?  @db.Text

  // Timestamps
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  confirmedAt     DateTime?
  completedAt     DateTime?

  // Booking Reference Number
  referenceNumber String   @unique

  @@index([userId])
  @@index([status])
  @@index([referenceNumber])
}

enum BookingStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  REFUNDED
}

model ContactInquiry {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String?
  message   String   @db.Text
  source    String?
  replied   Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([email])
  @@index([createdAt])
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Package {
  id          String   @id @default(cuid())
  packageId   String   @unique  // 01, 02, etc.
  title       String
  slug        String   @unique
  duration    String
  description String   @db.Text

  // Itinerary (JSON format)
  itinerary   String   @db.Text

  // Highlights
  highlights  String   @db.Text

  // Included/Not Included
  included    String   @db.Text
  notIncluded String   @db.Text

  // Destinations (comma-separated)
  destinations String

  // Pricing (JSON format: {threestar: {single: 450, double: 320, triple: 290}, ...})
  pricing     String   @db.Text

  // Hotels (JSON format)
  hotels      String   @db.Text

  // PDF URL
  pdfUrl      String?

  // Images
  image       String

  // Status
  isActive    Boolean  @default(true)

  // Timestamps
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([packageId])
  @@index([slug])
}
